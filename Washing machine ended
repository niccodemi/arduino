// Washing machine ended, MySensors 2.0.0
// Sensor to detect washing machine end of cycle
// Connect vibration sensor to digital pin 3 

// Enable debug prints
#define MY_DEBUG

// Enable and select radio type attached
#define MY_RADIO_NRF24
//#define MY_RADIO_RFM69

#include <MySensors.h>
#include <SPI.h>

#define CHILD_ID 3
#define BUTTON_PIN  3  // Arduino Digital I/O pin for vibration sensor
#define SAMPLING_PERIOD 300000 // 5 minutes period. YMMV

int oldValue=-1;
unsigned long period_start = millis();
int state = -1;

MyMessage msg(CHILD_ID,V_TRIPPED);

void setup()  
{  
 // Setup the button
  pinMode(BUTTON_PIN,INPUT);  
  // Activate internal pull-up
  digitalWrite(BUTTON_PIN,HIGH);
  sendHeartbeat();
  wait(100); 
}
void presentation() {
  // Send the sketch version information to the gateway and Controller
  sendSketchInfo("Washing machine", "1.0");
  wait(100); 
  // Register all sensors to gw (they will be created as child devices)
  present(CHILD_ID, S_DOOR);
  wait(100); 
}
void report_state(int state)
{
        Serial.print("reporting state: ");
        Serial.println(state); 
        send(msg.set(state));
        wait(200);
}

int prev_state = -1;
int prev_state_length = 0;

//  Check if digital input has changed and send in new value
void loop() 
{
  // Get the update value
  int value = digitalRead(BUTTON_PIN);

  if (value != 0 && state != 1) { // vibration detected for the first time during the period
    state = 1; 
  }

  if (millis() - period_start > SAMPLING_PERIOD) {
    period_start = millis();
    Serial.println(state);
    if (state != prev_state) {
        if (state == 1 && prev_state_length > 4) { //a vibration period after long period of quiet means a cycle started
            report_state(state);
            prev_state_length = 1;
        } 
    } else if (state == 0 && prev_state_length > 2) { // a long period of quiet means cycle ended
        if (prev_state_length == 3)
            report_state(state); // report only once 
    } 
    if (state != prev_state)
        prev_state_length = 1;
    else
        prev_state_length++;
    prev_state = state;
    state = 0;
    
  }
} 

