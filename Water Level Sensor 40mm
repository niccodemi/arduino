/* Water Level Sensor 40mm, MySensors 1.6
   More info: */

// Enable debug prints
#define MY_DEBUG

// Enable and select radio type attached
#define MY_RADIO_NRF24
//#define MY_RADIO_RFM69

#include <SPI.h>
#include <MySensor.h>  

#define CHILD_ID 1
unsigned long SLEEP_TIME = 60000; // Sleep time between reads (in milliseconds)
MyMessage msg(CHILD_ID, V_VOLUME);
const int read = A0; //Sensor AO pin to Arduino pin A0
int value;          //Variable to store the incomming data


void setup()
{
  //Begin serial communication
  Serial.begin(9600);
  sendHeartbeat();
  wait(30);
}
void presentation() {
  // Send the sketch version information to the gateway and Controller
  sendSketchInfo("Water Sensor", "1.0");

  // Register all sensors to gw (they will be created as child devices)
  present(CHILD_ID, S_WATER);
}
void loop()
{
  Serial.println(analogRead(read));
  value = analogRead(read); //Read data from analog pin and store it to value variable
  
  if (value<=480){ 
    Serial.println("Water level: 0mm - Empty!"); 
    send(msg.set("0%"));
  }
  else if (value>480 && value<=530){ 
    Serial.println("Water level: 0mm to 5mm"); 
    send(msg.set("12%"));
  }
  else if (value>530 && value<=615){ 
    Serial.println("Water level: 5mm to 10mm"); 
    send(msg.set("25%"));
  }
  else if (value>615 && value<=660){ 
    Serial.println("Water level: 10mm to 15mm"); 
    send(msg.set("37%"));
  } 
  else if (value>660 && value<=680){ 
    Serial.println("Water level: 15mm to 20mm"); 
    send(msg.set("50%"));
  }
  else if (value>680 && value<=690){ 
    Serial.println("Water level: 20mm to 25mm");
    send(msg.set("62%")); 
  }
  else if (value>690 && value<=700){ 
    Serial.println("Water level: 25mm to 30mm"); 
    send(msg.set("75%"));
  }
  else if (value>700 && value<=705){ 
    Serial.println("Water level: 30mm to 35mm");
    send(msg.set("88%")); 
  }
  else if (value>705){ 
    Serial.println("Water level: 35mm to 40mm"); 
    send(msg.set("100%"));
  }
  wait(400);
  sleep(SLEEP_TIME);
}
