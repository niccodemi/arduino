/* Gate Reed switch, modified for one sensor
https://forum.mysensors.org/topic/10869/arduino-pro-mini-rfm69-with-2-reed-switches-on-interrupts/7
 *
 */


// Enable debug prints to serial monitor
//#define MY_DEBUG

// Enable and select radio type attached
#define MY_RADIO_RF24
//#define MY_RADIO_RFM69

//(if not LOW, then issues with ACK in openhab, myscontroller)
#define MY_RF24_PA_LEVEL RF24_PA_LOW

// Enable repeater functionality for this node
#define MY_REPEATER_FEATURE

//Set Static ID
#define MY_NODE_ID 21

#include <MySensors.h>

#define CHILD_ID 1

#define BUTTON_PIN 3   // Arduino Digital I/O pin for button/reed switch

// Change to V_LIGHT if you use S_LIGHT in presentation below
MyMessage msg(CHILD_ID, V_TRIPPED);

void setup()
{
  // Setup the buttons
  pinMode(BUTTON_PIN, INPUT_PULLUP);
}

void presentation()
{
  // Send the sketch version information to the gateway and Controller
  wait(50);
  sendSketchInfo("Gate-reed-switch", "1.0");
  wait(80);

  // Register binary input sensor to sensor_node (they will be created as child devices)
  // You can use S_DOOR, S_MOTION or S_LIGHT here depending on your usage.
  // If S_LIGHT is used, remember to update variable type you send in. See "msg" above.
  present(CHILD_ID, S_DOOR);
  wait(50);
}

// Loop will iterate on changes on the BUTTON_PINs
void loop()
{
  uint8_t valueReed;
  static uint8_t lastValueReed=2;

  // Short delay to allow buttons to properly settle
  wait(5);

  //Serial.println("Woken up");
  valueReed = digitalRead(BUTTON_PIN);

  //Serial.print("Primary reed: ");
  //Serial.println(value);

  if (valueReed != lastValueReed) {
    // Value has changed from last transmission, send the updated value
    Serial.print("reed:");
    Serial.println(valueReed);
    send(msg.set(valueReed));
    lastValueReed = valueReed;
  }

  // Sleep until something happens with the sensor
  //sleep(PRIMARY_BUTTON_PIN-2, CHANGE, SECONDARY_BUTTON_PIN-2, CHANGE, 0);
  wait(BUTTON_PIN-2, CHANGE, 0);
}
