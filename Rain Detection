/* Rain detection sensor, MySensors 1.6

For use with a Rain Sensor with an analog out!

To test view the output, point a serial monitor such as Putty at your Arduino. 

  - If the Sensor Board is completely soaked; "case 0" will be activated and " Flood " will be sent to the serial monitor.
  - If the Sensor Board has water droplets on it; "case 1" will be activated and " Rain Warning " will be sent to the serial monitor.
  - If the Sensor Board is dry; "case 2" will be activated and " Not Raining " will be sent to the serial monitor. 
*/

// Enable debug prints
#define MY_DEBUG

// Enable and select radio type attached
#define MY_RADIO_NRF24
//#define MY_RADIO_RFM69

#include <SPI.h>
#include <MySensor.h>  

// lowest and highest sensor readings:
const int sensorMin = 0;     // sensor minimum
const int sensorMax = 1024;  // sensor maximum
// read the sensor on analog A0:
const int analogInPin = A0;  // Analog input pin that the potentiometer is attached to
int sensorReading = 0;
// map the sensor range (four options):
// ex: 'long int map(long int, long int, long int, long int, long int)'
//int range = map(sensorReading, sensorMin, sensorMax, 0, 3);

#define CHILD_ID 1
unsigned long SLEEP_TIME = 60000; // Sleep time between reads (in milliseconds)
MyMessage msg(CHILD_ID, V_TEXT);

void setup() {
  // initialize serial communication @ 9600 baud:
  Serial.begin(9600); 
  sendHeartbeat();
  wait(200); 
}

void presentation() {
  // Send the sketch version information to the gateway and Controller
  sendSketchInfo("Rain Detect", "1.0");
  wait(30);
  // Register all sensors to gw (they will be created as child devices)
  present(CHILD_ID, S_INFO);
}
void loop() {
  sensorReading = analogRead(analogInPin);
  int range = map(sensorReading, sensorMin, sensorMax, 0, 3);
  // range value:
  switch (range) {
 case 0:    // Sensor getting wet
    Serial.println("Flood");
    send(msg.set("Flood"));
    break;
 case 1:    // Sensor getting wet
    Serial.println("Rain Warning");
    send(msg.set("Rain Warning"));
    break;
 case 2:    // Sensor dry - To shut this up delete the " Serial.println("Not Raining"); " below.
    Serial.println("Not Raining");
    send(msg.set("Not Raining"));
    break;
  }
  Serial.print("sensor = " );
  Serial.println(sensorReading);
  Serial.println(range);
  wait(400);
  sleep(SLEEP_TIME);
}
